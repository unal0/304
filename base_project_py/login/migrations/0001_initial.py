# Generated by Django 4.2.1 on 2024-06-12 22:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Admin",
            fields=[
                (
                    "AdminID",
                    models.IntegerField(
                        db_column="AdminID", primary_key=True, serialize=False
                    ),
                ),
                ("Username", models.CharField(db_column="Username", max_length=45)),
                ("Name", models.CharField(db_column="Name", max_length=45)),
                ("Surname", models.CharField(db_column="Surname", max_length=45)),
                ("Phone", models.CharField(db_column="Phone", max_length=45)),
                ("Password", models.CharField(db_column="Password", max_length=45)),
            ],
            options={
                "db_table": "Admin",
            },
        ),
        migrations.CreateModel(
            name="Bill2",
            fields=[
                ("BillID", models.IntegerField(primary_key=True, serialize=False)),
                ("BillDate", models.DateField(null=True)),
            ],
            options={
                "db_table": "Bill2",
            },
        ),
        migrations.CreateModel(
            name="Department2",
            fields=[
                (
                    "DepartmentCode",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("DepartmentName", models.CharField(max_length=120, null=True)),
            ],
            options={
                "db_table": "Department2",
            },
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "DoctorID",
                    models.IntegerField(
                        db_column="DoctorID", primary_key=True, serialize=False
                    ),
                ),
                ("Username", models.CharField(db_column="Username", max_length=45)),
                ("Name", models.CharField(db_column="Name", max_length=45)),
                ("Surname", models.CharField(db_column="Surname", max_length=45)),
                ("Phone", models.CharField(db_column="Phone", max_length=45)),
                ("Password", models.CharField(db_column="Password", max_length=45)),
            ],
            options={
                "db_table": "Doctor",
            },
        ),
        migrations.CreateModel(
            name="Doctor2",
            fields=[
                ("DoctorID", models.IntegerField(primary_key=True, serialize=False)),
                ("Doctor_Name", models.CharField(max_length=45, null=True)),
                ("Doctor_Surname", models.CharField(max_length=45, null=True)),
                ("Doctor_Address", models.CharField(max_length=45, null=True)),
                ("Doctor_Title", models.CharField(max_length=45, null=True)),
                (
                    "ExaminationPrice",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "Department_DepartmentCode",
                    models.ForeignKey(
                        db_column="Department_DepartmentCode",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.department2",
                    ),
                ),
            ],
            options={
                "db_table": "Doctor2",
            },
        ),
        migrations.CreateModel(
            name="Insurance2",
            fields=[
                (
                    "IsuranceNumber",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                (
                    "InsuranceCoverage",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                ("InsuranceCompany", models.CharField(max_length=45, null=True)),
            ],
            options={
                "db_table": "Insurance2",
            },
        ),
        migrations.CreateModel(
            name="LabAssistant",
            fields=[
                (
                    "LabAssistantID",
                    models.IntegerField(
                        db_column="LabAssistantID", primary_key=True, serialize=False
                    ),
                ),
                ("Username", models.CharField(db_column="Username", max_length=45)),
                ("Name", models.CharField(db_column="Name", max_length=45)),
                ("Surname", models.CharField(db_column="Surname", max_length=45)),
                ("Phone", models.CharField(db_column="Phone", max_length=45)),
                ("Password", models.CharField(db_column="Password", max_length=45)),
            ],
            options={
                "db_table": "LabAssistant",
            },
        ),
        migrations.CreateModel(
            name="Medicines2",
            fields=[
                ("MedicineID", models.IntegerField(primary_key=True, serialize=False)),
                ("Medicine_Quantity", models.IntegerField(null=True)),
                ("Medicine_Name", models.CharField(max_length=120, null=True)),
                ("ExpiryDate", models.DateField(null=True)),
                (
                    "Price",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
            ],
            options={
                "db_table": "Medicines2",
            },
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "PatientID",
                    models.IntegerField(
                        db_column="PatientID", primary_key=True, serialize=False
                    ),
                ),
                ("Username", models.CharField(db_column="Username", max_length=45)),
                ("Name", models.CharField(db_column="Name", max_length=45)),
                ("Surname", models.CharField(db_column="Surname", max_length=45)),
                ("Phone", models.CharField(db_column="Phone", max_length=45)),
                (
                    "Password",
                    models.CharField(
                        db_column="Password", default="123", max_length=45
                    ),
                ),
            ],
            options={
                "db_table": "Patient",
            },
        ),
        migrations.CreateModel(
            name="Patient2",
            fields=[
                ("PatientID", models.IntegerField(primary_key=True, serialize=False)),
                ("Patient_Phone", models.IntegerField(null=True)),
                ("Patient_Gender", models.CharField(max_length=45, null=True)),
                ("PatientName", models.CharField(max_length=45, null=True)),
                ("PatientSurname", models.CharField(max_length=45, null=True)),
                (
                    "Insurance_IsuranceNumber",
                    models.ForeignKey(
                        db_column="Insurance_IsuranceNumber",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.insurance2",
                    ),
                ),
            ],
            options={
                "db_table": "Patient2",
            },
        ),
        migrations.CreateModel(
            name="Pharmacist",
            fields=[
                (
                    "PharmacistID",
                    models.IntegerField(
                        db_column="PharmacistID", primary_key=True, serialize=False
                    ),
                ),
                ("Username", models.CharField(db_column="Username", max_length=45)),
                ("Name", models.CharField(db_column="Name", max_length=45)),
                ("Surname", models.CharField(db_column="Surname", max_length=45)),
                ("Phone", models.CharField(db_column="Phone", max_length=45)),
                ("Password", models.CharField(db_column="Password", max_length=45)),
            ],
            options={
                "db_table": "Pharmacist",
            },
        ),
        migrations.CreateModel(
            name="Pharmacist2",
            fields=[
                (
                    "PharmacistID",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("PharmacistName", models.CharField(max_length=45, null=True)),
                ("PharmacistSurname", models.CharField(max_length=45, null=True)),
                ("Pharmacist_Phone", models.IntegerField(null=True)),
            ],
            options={
                "db_table": "Pharmacist2",
            },
        ),
        migrations.CreateModel(
            name="Prescription2",
            fields=[
                ("MedicineName", models.CharField(max_length=120, null=True)),
                ("Prescription_Date", models.DateField(null=True)),
                (
                    "PresriptionCost",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "Prescription_Code",
                    models.CharField(max_length=45, primary_key=True, serialize=False),
                ),
                (
                    "Doctor_DoctorID",
                    models.ForeignKey(
                        db_column="Doctor_DoctorID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.doctor2",
                    ),
                ),
                (
                    "Patient_Insurance_IsuranceNumber",
                    models.ForeignKey(
                        db_column="Patient_Insurance_IsuranceNumber",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.insurance2",
                    ),
                ),
                (
                    "Patient_PatientID",
                    models.ForeignKey(
                        db_column="Patient_PatientID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.patient2",
                    ),
                ),
            ],
            options={
                "db_table": "Prescription2",
            },
        ),
        migrations.CreateModel(
            name="Receptionist",
            fields=[
                (
                    "ReceptionistID",
                    models.IntegerField(
                        db_column="ReceptionistID", primary_key=True, serialize=False
                    ),
                ),
                ("Username", models.CharField(db_column="Username", max_length=45)),
                ("Name", models.CharField(db_column="Name", max_length=45)),
                ("Surname", models.CharField(db_column="Surname", max_length=45)),
                ("Phone", models.CharField(db_column="Phone", max_length=45)),
                ("Password", models.CharField(db_column="Password", max_length=45)),
            ],
            options={
                "db_table": "Receptionist",
            },
        ),
        migrations.CreateModel(
            name="Specimen2",
            fields=[
                ("SpecimenID", models.IntegerField(primary_key=True, serialize=False)),
                ("SpecimentType", models.CharField(max_length=200, null=True)),
            ],
            options={
                "db_table": "Specimen2",
            },
        ),
        migrations.CreateModel(
            name="TestResult2",
            fields=[
                (
                    "TestResultID",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("Value", models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                "db_table": "TestResult2",
            },
        ),
        migrations.CreateModel(
            name="Test2",
            fields=[
                ("TestID", models.IntegerField(primary_key=True, serialize=False)),
                ("TestName", models.CharField(max_length=200, null=True)),
                (
                    "NormalValue",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("Diagnosis", models.CharField(max_length=45, null=True)),
                (
                    "TestUnitPrice",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("SpecimenType", models.CharField(max_length=200, null=True)),
                (
                    "TestResult_TestResultID",
                    models.ForeignKey(
                        db_column="TestResult_TestResultID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.testresult2",
                    ),
                ),
            ],
            options={
                "db_table": "Test2",
            },
        ),
        migrations.CreateModel(
            name="DoctorSchedule2",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Date", models.DateField(null=True)),
                ("Time", models.TimeField(null=True)),
                ("Availability", models.CharField(max_length=45, null=True)),
                (
                    "Doctor_DoctorID",
                    models.ForeignKey(
                        db_column="Doctor_DoctorID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.doctor2",
                    ),
                ),
            ],
            options={
                "db_table": "DoctorSchedule2",
            },
        ),
        migrations.CreateModel(
            name="Appointment2",
            fields=[
                (
                    "AppointmentID",
                    models.IntegerField(
                        db_column="AppointmentID", primary_key=True, serialize=False
                    ),
                ),
                ("AppointmentDate", models.DateField(db_column="AppointmentDate")),
                ("AppointmentTime", models.TimeField(db_column="AppointmentTime")),
                (
                    "Bill_BillID",
                    models.ForeignKey(
                        blank=True,
                        db_column="Bill_BillID",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.bill2",
                    ),
                ),
                (
                    "Doctor_DoctorID",
                    models.ForeignKey(
                        db_column="Doctor_DoctorID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.doctor2",
                    ),
                ),
                (
                    "Patient_PatientID",
                    models.ForeignKey(
                        db_column="Patient_PatientID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.patient2",
                    ),
                ),
                (
                    "Prescription_Prescription_Code",
                    models.ForeignKey(
                        blank=True,
                        db_column="Prescription_Prescription_Code",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.prescription2",
                    ),
                ),
                (
                    "Test_TestID",
                    models.ForeignKey(
                        blank=True,
                        db_column="Test_TestID",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.test2",
                    ),
                ),
            ],
            options={
                "db_table": "Appointment2",
            },
        ),
        migrations.CreateModel(
            name="Specimen_has_Test2",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Specimen_SpecimenID",
                    models.ForeignKey(
                        db_column="Specimen_SpecimenID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.specimen2",
                    ),
                ),
                (
                    "Test_TestID",
                    models.ForeignKey(
                        db_column="Test_TestID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.test2",
                    ),
                ),
                (
                    "Test_TestResult_TestResultID",
                    models.ForeignKey(
                        db_column="Test_TestResult_TestResultID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.testresult2",
                    ),
                ),
            ],
            options={
                "db_table": "Specimen_has_Test2",
                "unique_together": {
                    (
                        "Specimen_SpecimenID",
                        "Test_TestID",
                        "Test_TestResult_TestResultID",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="Prescription_has_Medicines2",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Medicines_MedicineID",
                    models.ForeignKey(
                        db_column="Medicines_MedicineID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.medicines2",
                    ),
                ),
                (
                    "Prescription_Prescription_Code",
                    models.ForeignKey(
                        db_column="Prescription_Prescription_Code",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.prescription2",
                    ),
                ),
            ],
            options={
                "db_table": "Prescription_has_Medicines2",
                "unique_together": {
                    ("Prescription_Prescription_Code", "Medicines_MedicineID")
                },
            },
        ),
        migrations.CreateModel(
            name="Patient_has_Doctor2",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Doctor_DoctorID",
                    models.ForeignKey(
                        db_column="Doctor_DoctorID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.doctor2",
                    ),
                ),
                (
                    "Patient_PatientID",
                    models.ForeignKey(
                        db_column="Patient_PatientID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.patient2",
                    ),
                ),
            ],
            options={
                "db_table": "Patient_has_Doctor2",
                "unique_together": {("Patient_PatientID", "Doctor_DoctorID")},
            },
        ),
        migrations.CreateModel(
            name="Medicines_has_Pharmacist2",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Medicines_MedicineID",
                    models.ForeignKey(
                        db_column="Medicines_MedicineID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.medicines2",
                    ),
                ),
                (
                    "Pharmacist_PharmacistID",
                    models.ForeignKey(
                        db_column="Pharmacist_PharmacistID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="login.pharmacist2",
                    ),
                ),
            ],
            options={
                "db_table": "Medicines_has_Pharmacist2",
                "unique_together": {
                    ("Medicines_MedicineID", "Pharmacist_PharmacistID")
                },
            },
        ),
    ]
